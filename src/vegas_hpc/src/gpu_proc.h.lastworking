#ifndef _GPU_PROC_H
#define _GPU_PROC_H

#include "vegas_databuf.h"

#define FALSE               0
#define TRUE                1

#define FFTPLAN_RANK        1
#define FFTPLAN_ISTRIDE     (2 * g_iNumConcFFT)
#define FFTPLAN_OSTRIDE     (2 * g_iNumConcFFT)
#define FFTPLAN_IDIST       1
#define FFTPLAN_ODIST       1
#define FFTPLAN_BATCH       (2 * g_iNumConcFFT)

#if defined __cplusplus
extern "C"
#endif
int init_gpu(size_t input_block_sz, size_t output_block_sz, int num_subbands, int num_chans);

#if defined __cplusplus
extern "C"
#endif
void do_proc(struct vegas_databuf *db_in,
             int curblock_in,
             struct vegas_databuf *db_out,
             int first,
             struct vegas_status st,
             int acc_len);

char* read_gpu_input_data(char* payload_read_in);

int do_fft();

int accumulate();

void zero_accumulator();

int get_accumulated_spectrum_from_device(char *out);

int is_valid(int heap_start, int num_heaps);

int is_blanked(int heap_start, int num_heaps);

/* Free up any allocated memory */
void cleanup_gpu();

#endif

